package erp.hr.views;

import erp.hr.entities.InvInventoryImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 19 11:08:22 AST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvInventoryViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_INVINVENTORY = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ItemCode,
        SerialNumber,
        ProductName,
        ItemDescription,
        Brand,
        ItemPic,
        ItemType,
        ProductCategory,
        Location,
        DateReceived,
        SaleByDate,
        QuantityOnHande,
        Minimum,
        Maximum,
        QuantityReceived,
        Quantitytotransfer,
        RetailPrice,
        UnitSalePrice,
        ProductStatus,
        Tolocation,
        Transferdate,
        Transfernote,
        Transferreason,
        Transferstatus,
        Variance,
        VarianceReason,
        Notesremarks,
        QuantitySale,
        InvTransfersView,
        InvSalesView,
        InvSaleItemsView,
        InvOrdersView,
        InvInventoryView1,
        InvInventoryView2,
        InvInventoryView3,
        InvInventoryView4,
        InvInventoryView5;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return InvInventoryViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return InvInventoryViewRowImpl.AttributesEnum.firstIndex() +
                   InvInventoryViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = InvInventoryViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ITEMCODE = AttributesEnum.ItemCode.index();
    public static final int SERIALNUMBER = AttributesEnum.SerialNumber.index();
    public static final int PRODUCTNAME = AttributesEnum.ProductName.index();
    public static final int ITEMDESCRIPTION = AttributesEnum.ItemDescription.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int ITEMPIC = AttributesEnum.ItemPic.index();
    public static final int ITEMTYPE = AttributesEnum.ItemType.index();
    public static final int PRODUCTCATEGORY = AttributesEnum.ProductCategory.index();
    public static final int LOCATION = AttributesEnum.Location.index();
    public static final int DATERECEIVED = AttributesEnum.DateReceived.index();
    public static final int SALEBYDATE = AttributesEnum.SaleByDate.index();
    public static final int QUANTITYONHANDE = AttributesEnum.QuantityOnHande.index();
    public static final int MINIMUM = AttributesEnum.Minimum.index();
    public static final int MAXIMUM = AttributesEnum.Maximum.index();
    public static final int QUANTITYRECEIVED = AttributesEnum.QuantityReceived.index();
    public static final int QUANTITYTOTRANSFER = AttributesEnum.Quantitytotransfer.index();
    public static final int RETAILPRICE = AttributesEnum.RetailPrice.index();
    public static final int UNITSALEPRICE = AttributesEnum.UnitSalePrice.index();
    public static final int PRODUCTSTATUS = AttributesEnum.ProductStatus.index();
    public static final int TOLOCATION = AttributesEnum.Tolocation.index();
    public static final int TRANSFERDATE = AttributesEnum.Transferdate.index();
    public static final int TRANSFERNOTE = AttributesEnum.Transfernote.index();
    public static final int TRANSFERREASON = AttributesEnum.Transferreason.index();
    public static final int TRANSFERSTATUS = AttributesEnum.Transferstatus.index();
    public static final int VARIANCE = AttributesEnum.Variance.index();
    public static final int VARIANCEREASON = AttributesEnum.VarianceReason.index();
    public static final int NOTESREMARKS = AttributesEnum.Notesremarks.index();
    public static final int QUANTITYSALE = AttributesEnum.QuantitySale.index();
    public static final int INVTRANSFERSVIEW = AttributesEnum.InvTransfersView.index();
    public static final int INVSALESVIEW = AttributesEnum.InvSalesView.index();
    public static final int INVSALEITEMSVIEW = AttributesEnum.InvSaleItemsView.index();
    public static final int INVORDERSVIEW = AttributesEnum.InvOrdersView.index();
    public static final int INVINVENTORYVIEW1 = AttributesEnum.InvInventoryView1.index();
    public static final int INVINVENTORYVIEW2 = AttributesEnum.InvInventoryView2.index();
    public static final int INVINVENTORYVIEW3 = AttributesEnum.InvInventoryView3.index();
    public static final int INVINVENTORYVIEW4 = AttributesEnum.InvInventoryView4.index();
    public static final int INVINVENTORYVIEW5 = AttributesEnum.InvInventoryView5.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvInventoryViewRowImpl() {
    }

    /**
     * Gets InvInventory entity object.
     * @return the InvInventory
     */
    public InvInventoryImpl getInvInventory() {
        return (InvInventoryImpl) getEntity(ENTITY_INVINVENTORY);
    }

    /**
     * Gets the attribute value for ITEM_CODE using the alias name ItemCode.
     * @return the ITEM_CODE
     */
    public String getItemCode() {
        return (String) getAttributeInternal(ITEMCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_CODE using the alias name ItemCode.
     * @param value value to set the ITEM_CODE
     */
    public void setItemCode(String value) {
        setAttributeInternal(ITEMCODE, value);
    }

    /**
     * Gets the attribute value for SERIAL_NUMBER using the alias name SerialNumber.
     * @return the SERIAL_NUMBER
     */
    public BigDecimal getSerialNumber() {
        return (BigDecimal) getAttributeInternal(SERIALNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for SERIAL_NUMBER using the alias name SerialNumber.
     * @param value value to set the SERIAL_NUMBER
     */
    public void setSerialNumber(BigDecimal value) {
        setAttributeInternal(SERIALNUMBER, value);
    }

    /**
     * Gets the attribute value for LOCATION using the alias name Location.
     * @return the LOCATION
     */
    public String getLocation() {
        return (String) getAttributeInternal(LOCATION);
    }

    /**
     * Sets <code>value</code> as attribute value for LOCATION using the alias name Location.
     * @param value value to set the LOCATION
     */
    public void setLocation(String value) {
        setAttributeInternal(LOCATION, value);
    }


    /**
     * Gets the attribute value for BRAND using the alias name Brand.
     * @return the BRAND
     */
    public String getBrand() {
        return (String) getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as attribute value for BRAND using the alias name Brand.
     * @param value value to set the BRAND
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }

    /**
     * Gets the attribute value for ITEM_PIC using the alias name ItemPic.
     * @return the ITEM_PIC
     */
    public BlobDomain getItemPic() {
        return (BlobDomain) getAttributeInternal(ITEMPIC);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_PIC using the alias name ItemPic.
     * @param value value to set the ITEM_PIC
     */
    public void setItemPic(BlobDomain value) {
        setAttributeInternal(ITEMPIC, value);
    }

    /**
     * Gets the attribute value for PRODUCT_NAME using the alias name ProductName.
     * @return the PRODUCT_NAME
     */
    public String getProductName() {
        return (String) getAttributeInternal(PRODUCTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_NAME using the alias name ProductName.
     * @param value value to set the PRODUCT_NAME
     */
    public void setProductName(String value) {
        setAttributeInternal(PRODUCTNAME, value);
    }

    /**
     * Gets the attribute value for ITEM_TYPE using the alias name ItemType.
     * @return the ITEM_TYPE
     */
    public String getItemType() {
        return (String) getAttributeInternal(ITEMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_TYPE using the alias name ItemType.
     * @param value value to set the ITEM_TYPE
     */
    public void setItemType(String value) {
        setAttributeInternal(ITEMTYPE, value);
    }

    /**
     * Gets the attribute value for PRODUCT_CATEGORY using the alias name ProductCategory.
     * @return the PRODUCT_CATEGORY
     */
    public String getProductCategory() {
        return (String) getAttributeInternal(PRODUCTCATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_CATEGORY using the alias name ProductCategory.
     * @param value value to set the PRODUCT_CATEGORY
     */
    public void setProductCategory(String value) {
        setAttributeInternal(PRODUCTCATEGORY, value);
    }

    /**
     * Gets the attribute value for ITEM_DESCRIPTION using the alias name ItemDescription.
     * @return the ITEM_DESCRIPTION
     */
    public String getItemDescription() {
        return (String) getAttributeInternal(ITEMDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_DESCRIPTION using the alias name ItemDescription.
     * @param value value to set the ITEM_DESCRIPTION
     */
    public void setItemDescription(String value) {
        setAttributeInternal(ITEMDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for QUANTITY_RECEIVED using the alias name QuantityReceived.
     * @return the QUANTITY_RECEIVED
     */
    public Integer getQuantityReceived() {
        return (Integer) getAttributeInternal(QUANTITYRECEIVED);
    }

    /**
     * Sets <code>value</code> as attribute value for QUANTITY_RECEIVED using the alias name QuantityReceived.
     * @param value value to set the QUANTITY_RECEIVED
     */
    public void setQuantityReceived(Integer value) {
        setAttributeInternal(QUANTITYRECEIVED, value);
    }

    /**
     * Gets the attribute value for QUANTITYTOTRANSFER using the alias name Quantitytotransfer.
     * @return the QUANTITYTOTRANSFER
     */
    public Integer getQuantitytotransfer() {
        return (Integer) getAttributeInternal(QUANTITYTOTRANSFER);
    }

    /**
     * Sets <code>value</code> as attribute value for QUANTITYTOTRANSFER using the alias name Quantitytotransfer.
     * @param value value to set the QUANTITYTOTRANSFER
     */
    public void setQuantitytotransfer(Integer value) {
        setAttributeInternal(QUANTITYTOTRANSFER, value);
    }

    /**
     * Gets the attribute value for QUANTITY_ON_HANDE using the alias name QuantityOnHande.
     * @return the QUANTITY_ON_HANDE
     */
    public Integer getQuantityOnHande() {
        return (Integer) getAttributeInternal(QUANTITYONHANDE);
    }

    /**
     * Sets <code>value</code> as attribute value for QUANTITY_ON_HANDE using the alias name QuantityOnHande.
     * @param value value to set the QUANTITY_ON_HANDE
     */
    public void setQuantityOnHande(Integer value) {
        setAttributeInternal(QUANTITYONHANDE, value);
    }

    /**
     * Gets the attribute value for RETAIL_PRICE using the alias name RetailPrice.
     * @return the RETAIL_PRICE
     */
    public BigDecimal getRetailPrice() {
        return (BigDecimal) getAttributeInternal(RETAILPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for RETAIL_PRICE using the alias name RetailPrice.
     * @param value value to set the RETAIL_PRICE
     */
    public void setRetailPrice(BigDecimal value) {
        setAttributeInternal(RETAILPRICE, value);
    }

    /**
     * Gets the attribute value for UNIT_SALE_PRICE using the alias name UnitSalePrice.
     * @return the UNIT_SALE_PRICE
     */
    public BigDecimal getUnitSalePrice() {
        return (BigDecimal) getAttributeInternal(UNITSALEPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for UNIT_SALE_PRICE using the alias name UnitSalePrice.
     * @param value value to set the UNIT_SALE_PRICE
     */
    public void setUnitSalePrice(BigDecimal value) {
        setAttributeInternal(UNITSALEPRICE, value);
    }

    /**
     * Gets the attribute value for PRODUCT_STATUS using the alias name ProductStatus.
     * @return the PRODUCT_STATUS
     */
    public String getProductStatus() {
        return (String) getAttributeInternal(PRODUCTSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_STATUS using the alias name ProductStatus.
     * @param value value to set the PRODUCT_STATUS
     */
    public void setProductStatus(String value) {
        setAttributeInternal(PRODUCTSTATUS, value);
    }

    /**
     * Gets the attribute value for TOLOCATION using the alias name Tolocation.
     * @return the TOLOCATION
     */
    public String getTolocation() {
        return (String) getAttributeInternal(TOLOCATION);
    }

    /**
     * Sets <code>value</code> as attribute value for TOLOCATION using the alias name Tolocation.
     * @param value value to set the TOLOCATION
     */
    public void setTolocation(String value) {
        setAttributeInternal(TOLOCATION, value);
    }

    /**
     * Gets the attribute value for TRANSFERDATE using the alias name Transferdate.
     * @return the TRANSFERDATE
     */
    public Timestamp getTransferdate() {
        return (Timestamp) getAttributeInternal(TRANSFERDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRANSFERDATE using the alias name Transferdate.
     * @param value value to set the TRANSFERDATE
     */
    public void setTransferdate(Timestamp value) {
        setAttributeInternal(TRANSFERDATE, value);
    }

    /**
     * Gets the attribute value for TRANSFERNOTE using the alias name Transfernote.
     * @return the TRANSFERNOTE
     */
    public String getTransfernote() {
        return (String) getAttributeInternal(TRANSFERNOTE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRANSFERNOTE using the alias name Transfernote.
     * @param value value to set the TRANSFERNOTE
     */
    public void setTransfernote(String value) {
        setAttributeInternal(TRANSFERNOTE, value);
    }

    /**
     * Gets the attribute value for TRANSFERREASON using the alias name Transferreason.
     * @return the TRANSFERREASON
     */
    public String getTransferreason() {
        return (String) getAttributeInternal(TRANSFERREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for TRANSFERREASON using the alias name Transferreason.
     * @param value value to set the TRANSFERREASON
     */
    public void setTransferreason(String value) {
        setAttributeInternal(TRANSFERREASON, value);
    }

    /**
     * Gets the attribute value for TRANSFERSTATUS using the alias name Transferstatus.
     * @return the TRANSFERSTATUS
     */
    public String getTransferstatus() {
        return (String) getAttributeInternal(TRANSFERSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for TRANSFERSTATUS using the alias name Transferstatus.
     * @param value value to set the TRANSFERSTATUS
     */
    public void setTransferstatus(String value) {
        setAttributeInternal(TRANSFERSTATUS, value);
    }

    /**
     * Gets the attribute value for DATE_RECEIVED using the alias name DateReceived.
     * @return the DATE_RECEIVED
     */
    public Timestamp getDateReceived() {
        return (Timestamp) getAttributeInternal(DATERECEIVED);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_RECEIVED using the alias name DateReceived.
     * @param value value to set the DATE_RECEIVED
     */
    public void setDateReceived(Timestamp value) {
        setAttributeInternal(DATERECEIVED, value);
    }

    /**
     * Gets the attribute value for SALE_BY_DATE using the alias name SaleByDate.
     * @return the SALE_BY_DATE
     */
    public Timestamp getSaleByDate() {
        return (Timestamp) getAttributeInternal(SALEBYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for SALE_BY_DATE using the alias name SaleByDate.
     * @param value value to set the SALE_BY_DATE
     */
    public void setSaleByDate(Timestamp value) {
        setAttributeInternal(SALEBYDATE, value);
    }

    /**
     * Gets the attribute value for MINIMUM using the alias name Minimum.
     * @return the MINIMUM
     */
    public BigDecimal getMinimum() {
        return (BigDecimal) getAttributeInternal(MINIMUM);
    }

    /**
     * Sets <code>value</code> as attribute value for MINIMUM using the alias name Minimum.
     * @param value value to set the MINIMUM
     */
    public void setMinimum(BigDecimal value) {
        setAttributeInternal(MINIMUM, value);
    }

    /**
     * Gets the attribute value for MAXIMUM using the alias name Maximum.
     * @return the MAXIMUM
     */
    public BigDecimal getMaximum() {
        return (BigDecimal) getAttributeInternal(MAXIMUM);
    }

    /**
     * Sets <code>value</code> as attribute value for MAXIMUM using the alias name Maximum.
     * @param value value to set the MAXIMUM
     */
    public void setMaximum(BigDecimal value) {
        setAttributeInternal(MAXIMUM, value);
    }

    /**
     * Gets the attribute value for NOTESREMARKS using the alias name Notesremarks.
     * @return the NOTESREMARKS
     */
    public String getNotesremarks() {
        return (String) getAttributeInternal(NOTESREMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTESREMARKS using the alias name Notesremarks.
     * @param value value to set the NOTESREMARKS
     */
    public void setNotesremarks(String value) {
        setAttributeInternal(NOTESREMARKS, value);
    }

    /**
     * Gets the attribute value for QUANTITY_SALE using the alias name QuantitySale.
     * @return the QUANTITY_SALE
     */
    public BigDecimal getQuantitySale() {
        return (BigDecimal) getAttributeInternal(QUANTITYSALE);
    }

    /**
     * Sets <code>value</code> as attribute value for QUANTITY_SALE using the alias name QuantitySale.
     * @param value value to set the QUANTITY_SALE
     */
    public void setQuantitySale(BigDecimal value) {
        setAttributeInternal(QUANTITYSALE, value);
    }

    /**
     * Gets the attribute value for VARIANCE using the alias name Variance.
     * @return the VARIANCE
     */
    public Integer getVariance() {
        return (Integer) getAttributeInternal(VARIANCE);
    }

    /**
     * Sets <code>value</code> as attribute value for VARIANCE using the alias name Variance.
     * @param value value to set the VARIANCE
     */
    public void setVariance(Integer value) {
        setAttributeInternal(VARIANCE, value);
    }

    /**
     * Gets the attribute value for VARIANCE_REASON using the alias name VarianceReason.
     * @return the VARIANCE_REASON
     */
    public String getVarianceReason() {
        return (String) getAttributeInternal(VARIANCEREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for VARIANCE_REASON using the alias name VarianceReason.
     * @param value value to set the VARIANCE_REASON
     */
    public void setVarianceReason(String value) {
        setAttributeInternal(VARIANCEREASON, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link InvTransfersView.
     */
    public RowIterator getInvTransfersView() {
        return (RowIterator) getAttributeInternal(INVTRANSFERSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link InvSalesView.
     */
    public RowIterator getInvSalesView() {
        return (RowIterator) getAttributeInternal(INVSALESVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link InvSaleItemsView.
     */
    public RowIterator getInvSaleItemsView() {
        return (RowIterator) getAttributeInternal(INVSALEITEMSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link InvOrdersView.
     */
    public RowIterator getInvOrdersView() {
        return (RowIterator) getAttributeInternal(INVORDERSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvInventoryView1.
     */
    public RowSet getInvInventoryView1() {
        return (RowSet) getAttributeInternal(INVINVENTORYVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvInventoryView2.
     */
    public RowSet getInvInventoryView2() {
        return (RowSet) getAttributeInternal(INVINVENTORYVIEW2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvInventoryView3.
     */
    public RowSet getInvInventoryView3() {
        return (RowSet) getAttributeInternal(INVINVENTORYVIEW3);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvInventoryView4.
     */
    public RowSet getInvInventoryView4() {
        return (RowSet) getAttributeInternal(INVINVENTORYVIEW4);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvInventoryView5.
     */
    public RowSet getInvInventoryView5() {
        return (RowSet) getAttributeInternal(INVINVENTORYVIEW5);
    }
}

